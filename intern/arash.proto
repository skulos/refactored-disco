/* =====================================================
    @Name:     Arash
    @Company:  MN8 Technology
    @Author:   HS Hayman
   ===================================================== */

// Proto version
syntax = "proto3";

// Package name
package intern;

// ------------------------
//       MESSAGES
// ------------------------
// == 1. Default Message ==
message Empty {}

message Success {
    string old_did = 1;
    bool isForgotten = 2;
}

// == 2. Payments ==
message PaymentRequest {
    bool isValid = 1;
    int64 amount = 2;
    string did = 3;  
}

message PaymentResponse {
    bool isValid = 1;
    string token = 2;
}

// == 3. DID Information ==
message DID {
    string data = 1;
}


// == 4. Ticket Data ==
message Ticket {
    int64 amount = 1;
    int64 event = 2;
}

message Tickets {
    repeated Tickets tickets = 1;
}

message QRCodeRequest {
    string did = 1;
    string payment_token = 2;
    string event_id = 3;
}

message QRCodeResponse {
    string data = 1;
    Event event = 2;
}

// == 5. Gig Data ==
message Events {
    repeated Event data = 1;
}

message EventIDs {
    repeated int64 event_ids = 1;
}

message Event {
    string band = 1;
    string venue = 2;
    int64 price = 3;
    string event_id = 4;
    string date = 5;
}


// == 6. Wallet Data ==
message PrivateKey {
    string did = 1;
    string key = 2;
}

message PublicKey {
    string did = 1;
    string key = 2;
}

message Fields {
    string key = 1;
    string value = 2;
}

message Credential {
    string name = 1;
    repeated Fields fields = 2;
}

message Wallet {

    string DID = 1;
    repeated Credential credentials = 2;
}


// ----------------------
//    SERVICES
// ----------------------
service Gigsafe {

    // Get Events
    rpc GetEvents (Empty) returns (Events);

    // Check Tickets
    rpc CheckTickets (EventIDs) returns (Tickets);

    // Request Ticket
    rpc RequestTicket (QRCodeRequest) returns (QRCodeResponse);
    
}

service PaymentGateway {

    // Payment
    rpc Payment (PaymentRequest) returns (PaymentResponse);
}

service IdentityNetwork {

    // Forget Me
    rpc ForgetMe (Empty) returns (Success);

    // Get DID
    rpc GetDID (Empty) returns (DID);
}

service Agency {

    // Open Wallet
    rpc OpenWallet (DID) returns (Wallet);

    // Exchange Keys
    rpc ExchangeKeys (PublicKey) returns (PublicKey);

    // Add credential
    rpc AddCredential (Credential) returns (Wallet);

    // GetCredentials
    rpc GetCredential (Wallet) returns (Credential);

    // Revoke Credential
    rpc RevokeCredential (Credential) returns (Wallet);
}