// =====================================================
//@Name:     Arash
//@Company:  MN8 Technology
//@Author:   HS Hayman
//=====================================================

// Proto version

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: arash.proto

// Package name

package intern

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ----------------------
//    MESSAGES
// ----------------------
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arash_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_arash_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_arash_proto_rawDescGZIP(), []int{0}
}

type QRCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did          string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	PaymentToken string `protobuf:"bytes,2,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
	EventId      string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *QRCodeRequest) Reset() {
	*x = QRCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arash_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeRequest) ProtoMessage() {}

func (x *QRCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arash_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeRequest.ProtoReflect.Descriptor instead.
func (*QRCodeRequest) Descriptor() ([]byte, []int) {
	return file_arash_proto_rawDescGZIP(), []int{1}
}

func (x *QRCodeRequest) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *QRCodeRequest) GetPaymentToken() string {
	if x != nil {
		return x.PaymentToken
	}
	return ""
}

func (x *QRCodeRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type QRCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QRCodeResponse) Reset() {
	*x = QRCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arash_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeResponse) ProtoMessage() {}

func (x *QRCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arash_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeResponse.ProtoReflect.Descriptor instead.
func (*QRCodeResponse) Descriptor() ([]byte, []int) {
	return file_arash_proto_rawDescGZIP(), []int{2}
}

func (x *QRCodeResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Event `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Events) Reset() {
	*x = Events{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arash_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_arash_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_arash_proto_rawDescGZIP(), []int{3}
}

func (x *Events) GetData() []*Event {
	if x != nil {
		return x.Data
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Band    string `protobuf:"bytes,1,opt,name=band,proto3" json:"band,omitempty"`
	Venue   string `protobuf:"bytes,2,opt,name=venue,proto3" json:"venue,omitempty"`
	Price   int64  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	EventId string `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Date    string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arash_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_arash_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_arash_proto_rawDescGZIP(), []int{4}
}

func (x *Event) GetBand() string {
	if x != nil {
		return x.Band
	}
	return ""
}

func (x *Event) GetVenue() string {
	if x != nil {
		return x.Venue
	}
	return ""
}

func (x *Event) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

var File_arash_proto protoreflect.FileDescriptor

var file_arash_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x72, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x61,
	0x0a, 0x0d, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x24, 0x0a, 0x0e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x32, 0x75, 0x0a, 0x07,
	0x47, 0x69, 0x67, 0x73, 0x61, 0x66, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x10, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arash_proto_rawDescOnce sync.Once
	file_arash_proto_rawDescData = file_arash_proto_rawDesc
)

func file_arash_proto_rawDescGZIP() []byte {
	file_arash_proto_rawDescOnce.Do(func() {
		file_arash_proto_rawDescData = protoimpl.X.CompressGZIP(file_arash_proto_rawDescData)
	})
	return file_arash_proto_rawDescData
}

var file_arash_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_arash_proto_goTypes = []interface{}{
	(*Empty)(nil),          // 0: intern.Empty
	(*QRCodeRequest)(nil),  // 1: intern.QRCodeRequest
	(*QRCodeResponse)(nil), // 2: intern.QRCodeResponse
	(*Events)(nil),         // 3: intern.Events
	(*Event)(nil),          // 4: intern.Event
}
var file_arash_proto_depIdxs = []int32{
	4, // 0: intern.Events.data:type_name -> intern.Event
	0, // 1: intern.Gigsafe.GetEvents:input_type -> intern.Empty
	1, // 2: intern.Gigsafe.RequestTicket:input_type -> intern.QRCodeRequest
	3, // 3: intern.Gigsafe.GetEvents:output_type -> intern.Events
	2, // 4: intern.Gigsafe.RequestTicket:output_type -> intern.QRCodeResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_arash_proto_init() }
func file_arash_proto_init() {
	if File_arash_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arash_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arash_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arash_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arash_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Events); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arash_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arash_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_arash_proto_goTypes,
		DependencyIndexes: file_arash_proto_depIdxs,
		MessageInfos:      file_arash_proto_msgTypes,
	}.Build()
	File_arash_proto = out.File
	file_arash_proto_rawDesc = nil
	file_arash_proto_goTypes = nil
	file_arash_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GigsafeClient is the client API for Gigsafe service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GigsafeClient interface {
	// Get Events
	GetEvents(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Events, error)
	// Request Ticket
	RequestTicket(ctx context.Context, in *QRCodeRequest, opts ...grpc.CallOption) (*QRCodeResponse, error)
}

type gigsafeClient struct {
	cc grpc.ClientConnInterface
}

func NewGigsafeClient(cc grpc.ClientConnInterface) GigsafeClient {
	return &gigsafeClient{cc}
}

func (c *gigsafeClient) GetEvents(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Events, error) {
	out := new(Events)
	err := c.cc.Invoke(ctx, "/intern.Gigsafe/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gigsafeClient) RequestTicket(ctx context.Context, in *QRCodeRequest, opts ...grpc.CallOption) (*QRCodeResponse, error) {
	out := new(QRCodeResponse)
	err := c.cc.Invoke(ctx, "/intern.Gigsafe/RequestTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GigsafeServer is the server API for Gigsafe service.
type GigsafeServer interface {
	// Get Events
	GetEvents(context.Context, *Empty) (*Events, error)
	// Request Ticket
	RequestTicket(context.Context, *QRCodeRequest) (*QRCodeResponse, error)
}

// UnimplementedGigsafeServer can be embedded to have forward compatible implementations.
type UnimplementedGigsafeServer struct {
}

func (*UnimplementedGigsafeServer) GetEvents(context.Context, *Empty) (*Events, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (*UnimplementedGigsafeServer) RequestTicket(context.Context, *QRCodeRequest) (*QRCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestTicket not implemented")
}

func RegisterGigsafeServer(s *grpc.Server, srv GigsafeServer) {
	s.RegisterService(&_Gigsafe_serviceDesc, srv)
}

func _Gigsafe_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GigsafeServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intern.Gigsafe/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GigsafeServer).GetEvents(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gigsafe_RequestTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QRCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GigsafeServer).RequestTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intern.Gigsafe/RequestTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GigsafeServer).RequestTicket(ctx, req.(*QRCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gigsafe_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intern.Gigsafe",
	HandlerType: (*GigsafeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvents",
			Handler:    _Gigsafe_GetEvents_Handler,
		},
		{
			MethodName: "RequestTicket",
			Handler:    _Gigsafe_RequestTicket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "arash.proto",
}

// PaymentGatewayClient is the client API for PaymentGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentGatewayClient interface {
}

type paymentGatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymentGatewayClient(cc grpc.ClientConnInterface) PaymentGatewayClient {
	return &paymentGatewayClient{cc}
}

// PaymentGatewayServer is the server API for PaymentGateway service.
type PaymentGatewayServer interface {
}

// UnimplementedPaymentGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentGatewayServer struct {
}

func RegisterPaymentGatewayServer(s *grpc.Server, srv PaymentGatewayServer) {
	s.RegisterService(&_PaymentGateway_serviceDesc, srv)
}

var _PaymentGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intern.PaymentGateway",
	HandlerType: (*PaymentGatewayServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "arash.proto",
}
